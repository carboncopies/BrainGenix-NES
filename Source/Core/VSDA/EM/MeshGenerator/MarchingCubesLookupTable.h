#ifndef MARCHING_CUBES_LOOKUP_TABLE_H
#define MARCHING_CUBES_LOOKUP_TABLE_H

//
// Lookup Tables for Marching Cubes
//
// These tables differ from the original paper (Marching Cubes: A High Resolution 3D Surface Construction Algorithm)
//
// The co-ordinate system has the more convenient properties:
//
//    i = cube index [0, 7]
//    x = (i & 1) >> 0
//    y = (i & 2) >> 1
//    z = (i & 4) >> 2
//
// Axes are:
//
//      y
//      |     z
//      |   /
//      | /
//      +----- x
//
// Vertex and edge layout:
//
//            6             7
//            +-------------+               +-----6-------+   
//          / |           / |             / |            /|   
//        /   |         /   |          11   7         10   5
//    2 +-----+-------+  3  |         +-----+2------+     |   
//      |   4 +-------+-----+ 5       |     +-----4-+-----+   
//      |   /         |   /           3   8         1   9
//      | /           | /             | /           | /       
//    0 +-------------+ 1             +------0------+         
//
// Triangulation cases are generated prioritising rotations over inversions, which can introduce non-manifold geometry.
//

namespace BG {
namespace NES {
namespace Simulator {

// Pair of vertex indices for each edge on the cube
const int EdgeVertexIndices[12][2] = {
    {0, 1}, {1, 3}, {3, 2}, {2, 0}, // Bottom edges
    {4, 5}, {5, 7}, {7, 6}, {6, 4}, // Top edges
    {0, 4}, {1, 5}, {3, 7}, {2, 6}  // Vertical edges
};

// For each MC case, a mask of edge indices that need to be split
const int EdgeMasks[256] = {
    0x0, 0x109, 0x203, 0x30a, 0x80c, 0x905, 0xa0f, 0xb06,
    0x406, 0x50f, 0x605, 0x70c, 0xc0a, 0xd03, 0xe09, 0xf00,
    0x190, 0x99, 0x393, 0x29a, 0x99c, 0x895, 0xb9f, 0xa96,
    0x596, 0x49f, 0x795, 0x69c, 0xd9a, 0xc93, 0xf99, 0xe90,
    0x230, 0x339, 0x33, 0x13a, 0xa3c, 0xb35, 0x83f, 0x936,
    0x636, 0x73f, 0x435, 0x53c, 0xe3a, 0xf33, 0xc39, 0xd30,
    0x3a0, 0x2a9, 0x1a3, 0xaa, 0xbac, 0xaa5, 0x9af, 0x8a6,
    0x7a6, 0x6af, 0x5a5, 0x4ac, 0xfaa, 0xea3, 0xda9, 0xca0,
    0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc, 0x1c5, 0x2cf, 0x3c6,
    0xcc6, 0xdcf, 0xec5, 0xfcc, 0x4ca, 0x5c3, 0x6c9, 0x7c0,
    0x950, 0x859, 0xb53, 0xa5a, 0x15c, 0x55, 0x35f, 0x256,
    0xd56, 0xc5f, 0xf55, 0xe5c, 0x55a, 0x453, 0x759, 0x650,
    0xaf0, 0xbf9, 0x8f3, 0x9fa, 0x2fc, 0x3f5, 0xff, 0x1f6,
    0xef6, 0xfff, 0xcf5, 0xdfc, 0x6fa, 0x7f3, 0x4f9, 0x5f0,
    0xb60, 0xa69, 0x963, 0x86a, 0x36c, 0x265, 0x16f, 0x66,
    0xf66, 0xe6f, 0xd65, 0xc6c, 0x76a, 0x663, 0x569, 0x460,
    0x460, 0x569, 0x663, 0x76a, 0xc6c, 0xd65, 0xe6f, 0xf66,
    0x66, 0x16f, 0x265, 0x36c, 0x86a, 0x963, 0xa69, 0xb60,
    0x5f0, 0x4f9, 0x7f3, 0x6fa, 0xdfc, 0xcf5, 0xfff, 0xef6,
    0x1f6, 0xff, 0x3f5, 0x2fc, 0x9fa, 0x8f3, 0xbf9, 0xaf0,
    0x650, 0x759, 0x453, 0x55a, 0xe5c, 0xf55, 0xc5f, 0xd56,
    0x256, 0x35f, 0x55, 0x15c, 0xa5a, 0xb53, 0x859, 0x950,
    0x7c0, 0x6c9, 0x5c3, 0x4ca, 0xfcc, 0xec5, 0xdcf, 0xcc6,
    0x3c6, 0x2cf, 0x1c5, 0xcc, 0xbca, 0xac3, 0x9c9, 0x8c0,
    0xca0, 0xda9, 0xea3, 0xfaa, 0x4ac, 0x5a5, 0x6af, 0x7a6,
    0x8a6, 0x9af, 0xaa5, 0xbac, 0xaa, 0x1a3, 0x2a9, 0x3a0,
    0xd30, 0xc39, 0xf33, 0xe3a, 0x53c, 0x435, 0x73f, 0x636,
    0x936, 0x83f, 0xb35, 0xa3c, 0x13a, 0x33, 0x339, 0x230,
    0xe90, 0xf99, 0xc93, 0xd9a, 0x69c, 0x795, 0x49f, 0x596,
    0xa96, 0xb9f, 0x895, 0x99c, 0x29a, 0x393, 0x99, 0x190,
    0xf00, 0xe09, 0xd03, 0xc0a, 0x70c, 0x605, 0x50f, 0x406,
    0xb06, 0xa0f, 0x905, 0x80c, 0x30a, 0x203, 0x109, 0x0,
};

// For each MC case, a list of triangles, specified as triples of edge indices, terminated by -1
const int TriangleTable[256][16] = {
    {-1}, // Case 0
    {0, 8, 3, -1}, // Case 1
    {0, 1, 9, -1}, // Case 2
    {1, 8, 3, 9, 8, 1, -1}, // Case 3
    {1, 2, 10, -1}, // Case 4
    {0, 8, 3, 1, 2, 10, -1}, // Case 5
    {9, 2, 10, 0, 2, 9, -1}, // Case 6
    {2, 8, 3, 2, 10, 8, 10, 9, 8, -1}, // Case 7
    {3, 11, 2, -1}, // Case 8
    {0, 11, 2, 8, 11, 0, -1}, // Case 9
    {1, 9, 0, 2, 3, 11, -1}, // Case 10
    {1, 11, 2, 1, 9, 11, 9, 8, 11, -1}, // Case 11
    {3, 10, 1, 11, 10, 3, -1}, // Case 12
    {0, 10, 1, 0, 8, 10, 8, 11, 10, -1}, // Case 13
    {3, 9, 0, 3, 11, 9, 11, 10, 9, -1}, // Case 14
    {9, 8, 10, 10, 8, 11, -1}, // Case 15
    {4, 7, 8, -1}, // Case 16
    {4, 3, 0, 7, 3, 4, -1}, // Case 17
    {0, 1, 9, 8, 4, 7, -1}, // Case 18
    {4, 1, 9, 4, 7, 1, 7, 3, 1, -1}, // Case 19
    {1, 2, 10, 8, 4, 7, -1}, // Case 20
    {3, 4, 7, 3, 0, 4, 1, 2, 10, -1}, // Case 21
    {9, 2, 10, 9, 0, 2, 8, 4, 7, -1}, // Case 22
    {2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1}, // Case 23
    {8, 4, 7, 3, 11, 2, -1}, // Case 24
    {11, 4, 7, 11, 2, 4, 2, 0, 4, -1}, // Case 25
    {9, 0, 1, 8, 4, 7, 2, 3, 11, -1}, // Case 26
    {4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1}, // Case 27
    {3, 10, 1, 3, 11, 10, 7, 8, 4, -1}, // Case 28
    {1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1}, // Case 29
    {4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1}, // Case 30
    {4, 7, 11, 4, 11, 9, 9, 11, 10, -1}, // Case 31
    {9, 5, 4, -1}, // Case 32
    {9, 5, 4, 0, 8, 3, -1}, // Case 33
    {0, 5, 4, 1, 5, 0, -1}, // Case 34
    {8, 5, 4, 8, 3, 5, 3, 1, 5, -1}, // Case 35
    {1, 2, 10, 9, 5, 4, -1}, // Case 36
    {3, 0, 8, 1, 2, 10, 4, 9, 5, -1}, // Case 37
    {5, 2, 10, 5, 4, 2, 4, 0, 2, -1}, // Case 38
    {2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1}, // Case 39
    {9, 5, 4, 2, 3, 11, -1}, // Case 40
    {0, 11, 2, 0, 8, 11, 4, 9, 5, -1}, // Case 41
    {0, 5, 4, 0, 1, 5, 2, 3, 11, -1}, // Case 42
    {2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1}, // Case 43
    {10, 3, 11, 10, 1, 3, 9, 5, 4, -1}, // Case 44
    {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1}, // Case 45
    {5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1}, // Case 46
    {5, 4, 8, 5, 8, 10, 10, 8, 11, -1}, // Case 47
    {9, 7, 8, 5, 7, 9, -1}, // Case 48
    {9, 3, 0, 9, 5, 3, 5, 7, 3, -1}, // Case 49
    {0, 7, 8, 0, 1, 7, 1, 5, 7, -1}, // Case 50
    {1, 5, 3, 3, 5, 7, -1}, // Case 51
    {9, 7, 8, 9, 5, 7, 10, 1, 2, -1}, // Case 52
    {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1}, // Case 53
    {8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1}, // Case 54
    {2, 10, 5, 2, 5, 3, 3, 5, 7, -1}, // Case 55
    {7, 9, 5, 7, 8, 9, 3, 11, 2, -1}, // Case 56
    {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1}, // Case 57
    {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1}, // Case 58
    {11, 2, 1, 11, 1, 7, 7, 1, 5, -1}, // Case 59
    {9, 5, 8, 8, 5, 7, 10, 1, 11, 1, 3, 11, -1}, // Case 60
    {5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1}, // Case 61
    {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1}, // Case 62
    {11, 10, 5, 7, 11, 5, -1}, // Case 63
    {10, 6, 5, -1}, // Case 64
    {0, 8, 3, 5, 10, 6, -1}, // Case 65
    {9, 0, 1, 5, 10, 6, -1}, // Case 66
    {1, 8, 3, 1, 9, 8, 5, 10, 6, -1}, // Case 67
    {1, 6, 5, 2, 6, 1, -1}, // Case 68
    {1, 6, 5, 1, 2, 6, 3, 0, 8, -1}, // Case 69
    {9, 6, 5, 9, 0, 6, 0, 2, 6, -1}, // Case 70
    {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1}, // Case 71
    {2, 3, 11, 10, 6, 5, -1}, // Case 72
    {11, 0, 8, 11, 2, 0, 10, 6, 5, -1}, // Case 73
    {0, 1, 9, 2, 3, 11, 5, 10, 6, -1}, // Case 74
    {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1}, // Case 75
    {6, 3, 11, 6, 5, 3, 5, 1, 3, -1}, // Case 76
    {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1}, // Case 77
    {3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1}, // Case 78
    {6, 5, 9, 6, 9, 11, 11, 9, 8, -1}, // Case 79
    {5, 10, 6, 4, 7, 8, -1}, // Case 80
    {4, 3, 0, 4, 7, 3, 6, 5, 10, -1}, // Case 81
    {1, 9, 0, 5, 10, 6, 8, 4, 7, -1}, // Case 82
    {10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1}, // Case 83
    {6, 1, 2, 6, 5, 1, 4, 7, 8, -1}, // Case 84
    {1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1}, // Case 85
    {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1}, // Case 86
    {7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1}, // Case 87
    {3, 11, 2, 7, 8, 4, 10, 6, 5, -1}, // Case 88
    {5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1}, // Case 89
    {0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1}, // Case 90
    {9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1}, // Case 91
    {8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1}, // Case 92
    {5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1}, // Case 93
    {0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1}, // Case 94
    {6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1}, // Case 95
    {10, 4, 9, 6, 4, 10, -1}, // Case 96
    {4, 10, 6, 4, 9, 10, 0, 8, 3, -1}, // Case 97
    {10, 0, 1, 10, 6, 0, 6, 4, 0, -1}, // Case 98
    {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1}, // Case 99
    {1, 4, 9, 1, 2, 4, 2, 6, 4, -1}, // Case 100
    {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1}, // Case 101
    {0, 2, 4, 4, 2, 6, -1}, // Case 102
    {8, 3, 2, 8, 2, 4, 4, 2, 6, -1}, // Case 103
    {10, 4, 9, 10, 6, 4, 11, 2, 3, -1}, // Case 104
    {0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1}, // Case 105
    {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1}, // Case 106
    {6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1}, // Case 107
    {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1}, // Case 108
    {8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1}, // Case 109
    {3, 6, 11, 0, 6, 3, 0, 4, 6, 0, 9, 4, -1}, // Case 110
    {6, 4, 8, 11, 6, 8, -1}, // Case 111
    {7, 10, 6, 7, 8, 10, 8, 9, 10, -1}, // Case 112
    {0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1}, // Case 113
    {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1}, // Case 114
    {10, 6, 7, 10, 7, 1, 1, 7, 3, -1}, // Case 115
    {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1}, // Case 116
    {2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1}, // Case 117
    {7, 8, 0, 7, 0, 6, 6, 0, 2, -1}, // Case 118
    {7, 3, 2, 6, 7, 2, -1}, // Case 119
    {2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1}, // Case 120
    {2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1}, // Case 121
    {1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1}, // Case 122
    {11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1}, // Case 123
    {8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1}, // Case 124
    {0, 9, 1, 11, 6, 7, -1}, // Case 125
    {7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1}, // Case 126
    {7, 11, 6, -1}, // Case 127
    {7, 6, 11, -1}, // Case 128
    {3, 0, 8, 11, 7, 6, -1}, // Case 129
    {0, 1, 9, 11, 7, 6, -1}, // Case 130
    {8, 1, 9, 8, 3, 1, 11, 7, 6, -1}, // Case 131
    {10, 1, 2, 6, 11, 7, -1}, // Case 132
    {1, 2, 10, 3, 0, 8, 6, 11, 7, -1}, // Case 133
    {2, 9, 0, 2, 10, 9, 6, 11, 7, -1}, // Case 134
    {6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1}, // Case 135
    {7, 2, 3, 6, 2, 7, -1}, // Case 136
    {7, 0, 8, 7, 6, 0, 6, 2, 0, -1}, // Case 137
    {2, 7, 6, 2, 3, 7, 0, 1, 9, -1}, // Case 138
    {1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1}, // Case 139
    {10, 7, 6, 10, 1, 7, 1, 3, 7, -1}, // Case 140
    {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1}, // Case 141
    {0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1}, // Case 142
    {7, 6, 10, 7, 10, 8, 8, 10, 9, -1}, // Case 143
    {6, 8, 4, 11, 8, 6, -1}, // Case 144
    {3, 6, 11, 3, 0, 6, 0, 4, 6, -1}, // Case 145
    {8, 6, 11, 8, 4, 6, 9, 0, 1, -1}, // Case 146
    {9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1}, // Case 147
    {6, 8, 4, 6, 11, 8, 2, 10, 1, -1}, // Case 148
    {1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1}, // Case 149
    {4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1}, // Case 150
    {10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1}, // Case 151
    {8, 2, 3, 8, 4, 2, 4, 6, 2, -1}, // Case 152
    {0, 4, 2, 4, 6, 2, -1}, // Case 153
    {1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1}, // Case 154
    {1, 9, 4, 1, 4, 2, 2, 4, 6, -1}, // Case 155
    {8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1}, // Case 156
    {10, 1, 0, 10, 0, 6, 6, 0, 4, -1}, // Case 157
    {4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1}, // Case 158
    {10, 9, 4, 6, 10, 4, -1}, // Case 159
    {4, 9, 5, 7, 6, 11, -1}, // Case 160
    {0, 8, 3, 4, 9, 5, 11, 7, 6, -1}, // Case 161
    {5, 0, 1, 5, 4, 0, 7, 6, 11, -1}, // Case 162
    {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1}, // Case 163
    {9, 5, 4, 10, 1, 2, 7, 6, 11, -1}, // Case 164
    {6, 11, 7, 1, 2, 10, 0, 8, 3, 9, 5, 4, -1}, // Case 165
    {7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1}, // Case 166
    {3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1}, // Case 167
    {7, 2, 3, 7, 6, 2, 5, 4, 9, -1}, // Case 168
    {9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1}, // Case 169
    {3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1}, // Case 170
    {6, 2, 8, 6, 8, 7, 2, 1, 8, 0, 8, 5, 1, 5, 8, -1}, // Case 171
    {9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1}, // Case 172
    {1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1}, // Case 173
    {4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1}, // Case 174
    {7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1}, // Case 175
    {6, 9, 5, 6, 11, 9, 11, 8, 9, -1}, // Case 176
    {3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1}, // Case 177
    {0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1}, // Case 178
    {6, 11, 3, 6, 3, 5, 5, 3, 1, -1}, // Case 179
    {1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1}, // Case 180
    {0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1}, // Case 181
    {11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1}, // Case 182
    {6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1}, // Case 183
    {5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1}, // Case 184
    {9, 5, 6, 9, 6, 0, 0, 6, 2, -1}, // Case 185
    {1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1}, // Case 186
    {1, 5, 6, 2, 1, 6, -1}, // Case 187
    {1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1}, // Case 188
    {10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1}, // Case 189
    {0, 3, 8, 5, 6, 10, -1}, // Case 190
    {10, 5, 6, -1}, // Case 191
    {11, 5, 10, 7, 5, 11, -1}, // Case 192
    {11, 5, 10, 11, 7, 5, 8, 3, 0, -1}, // Case 193
    {5, 11, 7, 5, 10, 11, 1, 9, 0, -1}, // Case 194
    {10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1}, // Case 195
    {11, 1, 2, 11, 7, 1, 7, 5, 1, -1}, // Case 196
    {0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1}, // Case 197
    {9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1}, // Case 198
    {7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1}, // Case 199
    {2, 5, 10, 2, 3, 5, 3, 7, 5, -1}, // Case 200
    {8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1}, // Case 201
    {9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1}, // Case 202
    {9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1}, // Case 203
    {1, 3, 5, 3, 7, 5, -1}, // Case 204
    {0, 8, 7, 0, 7, 1, 1, 7, 5, -1}, // Case 205
    {9, 0, 3, 9, 3, 5, 5, 3, 7, -1}, // Case 206
    {9, 8, 7, 5, 9, 7, -1}, // Case 207
    {5, 8, 4, 5, 10, 8, 10, 11, 8, -1}, // Case 208
    {5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1}, // Case 209
    {0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1}, // Case 210
    {10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1}, // Case 211
    {2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1}, // Case 212
    {0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1}, // Case 213
    {0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1}, // Case 214
    {9, 4, 5, 2, 3, 11, -1}, // Case 215
    {2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1}, // Case 216
    {5, 10, 2, 5, 2, 4, 4, 2, 0, -1}, // Case 217
    {3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1}, // Case 218
    {5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1}, // Case 219
    {8, 4, 5, 8, 5, 3, 3, 5, 1, -1}, // Case 220
    {0, 4, 5, 1, 0, 5, -1}, // Case 221
    {8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1}, // Case 222
    {9, 4, 5, -1}, // Case 223
    {4, 11, 7, 4, 9, 11, 9, 10, 11, -1}, // Case 224
    {0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1}, // Case 225
    {1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1}, // Case 226
    {3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1}, // Case 227
    {4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1}, // Case 228
    {9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1}, // Case 229
    {11, 7, 4, 11, 4, 2, 2, 4, 0, -1}, // Case 230
    {11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1}, // Case 231
    {2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1}, // Case 232
    {9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1}, // Case 233
    {3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1}, // Case 234
    {1, 10, 2, 8, 7, 4, -1}, // Case 235
    {4, 9, 1, 4, 1, 7, 7, 1, 3, -1}, // Case 236
    {4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1}, // Case 237
    {4, 0, 3, 7, 4, 3, -1}, // Case 238
    {4, 8, 7, -1}, // Case 239
    {9, 10, 8, 10, 11, 8, -1}, // Case 240
    {3, 0, 9, 3, 9, 11, 11, 9, 10, -1}, // Case 241
    {0, 1, 10, 0, 10, 8, 8, 10, 11, -1}, // Case 242
    {3, 1, 10, 11, 3, 10, -1}, // Case 243
    {1, 2, 11, 1, 11, 9, 9, 11, 8, -1}, // Case 244
    {3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1}, // Case 245
    {0, 2, 11, 8, 0, 11, -1}, // Case 246
    {3, 2, 11, -1}, // Case 247
    {2, 3, 8, 2, 8, 10, 10, 8, 9, -1}, // Case 248
    {9, 10, 2, 0, 9, 2, -1}, // Case 249
    {2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1}, // Case 250
    {1, 10, 2, -1}, // Case 251
    {1, 3, 8, 9, 1, 8, -1}, // Case 252
    {0, 9, 1, -1}, // Case 253
    {0, 3, 8, -1}, // Case 254
    {-1} // Case 255
};

} // namespace Simulator
} // namespace NES
} // namespace BG

#endif // MARCHING_CUBES_LOOKUP_TABLE_H